plugins
{
    id 'opendcs.deps-conventions'
    id 'distribution'
}

configurations
{
    annotations
    opendcs
    docs
}

dependencies
{
    annotations(project(":opendcs-annotations"))
    opendcs(project(":opendcs"))
    docs(project(path: ":docs", configuration: 'docs'))
}

distributions
{
    main
    {
        distributionBaseName = 'opendcs'
        contents
        {
            exclude '**/scripts'
            into('bin')
            {
                from ('src/main/dist/scripts')
                
                filePermissions
                {
                    user
                    {
                        write = true;
                        execute = true
                    }
                    group
                    {
                        write = false;
                        execute = true
                    }
                    other
                    {
                        read = true
                        execute = true
                    }
                }
                from(configurations.opendcs)
                {
                    include "**/opendcs-${version}.jar"
                    rename("opendcs-${version}.jar",'opendcs.jar')
                }
            }
            filePermissions
            {
                user
                {
                    write = true;
                    read = true
                }
                group
                {
                    write = false;
                    read = true
                }
                other
                {
                    read = true
                    write = false
                }
            }

            into('dep')
            {
                from configurations.annotations
                from configurations.opendcs
                exclude "**/opendcs-${version}.jar"
            }
            into('doc')
            {
                from configurations.docs
            }

            into('schema') {
                from "${rootDir}/schema"
            }
        }
    }
}
